// Generated by CoffeeScript 1.9.3

/*
 * Prints lexed code so it's easily readable.
 */

(function() {
  var color, padding, print_lex;

  color = function(string, color) {
    var colors;
    colors = {
      reset: "\x1b[0m",
      bright: "\x1b[1m",
      dim: "\x1b[2m",
      underscore: "\x1b[4m",
      blink: "\x1b[5m",
      reverse: "\x1b[7m",
      hidden: "\x1b[8m",
      FgBlack: "\x1b[30m",
      red: "\x1b[31m",
      green: "\x1b[32m",
      yellow: "\x1b[33m",
      blue: "\x1b[34m",
      magenta: "\x1b[35m",
      cyan: "\x1b[36m",
      white: "\x1b[37m"
    };
    return colors[color] + string + colors.reset;
  };

  padding = function(string, length) {
    while (string.length < length) {
      string += ' ';
    }
    return string;
  };

  print_lex = function(l) {
    var c, i, j, len, res;
    res = padding('- Type -', 18) + ':   ' + padding('- value - ', 12) + '\n';
    for (j = 0, len = l.length; j < len; j++) {
      i = l[j];
      if (i == null) {
        break;
      }
      c = (function() {
        switch (i.type) {
          case 'string':
            return 'yellow';
          case 'number':
            return 'blue';
          case 'binary_operator':
            return 'green';
          case 'keyword':
          case 'var_type':
          case 'function_start':
          case 'block_start':
            return 'cyan';
          default:
            return 'reset';
        }
      })();
      res += (function() {
        switch (i.type) {
          case 'line_break':
            return '-\n';
          case 'block_end':
            return color('      block end\n', 'bright');
          default:
            return padding(i.type, 18) + ':   ' + padding(color(i.value, c), 15) + '\n';
        }
      })();
    }
    return res;
  };

  module.exports = print_lex;

}).call(this);
