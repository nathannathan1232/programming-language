// Generated by CoffeeScript 1.9.3
(function() {
  var color, print, yaml;

  yaml = require('json2yaml');

  color = function(string, color) {
    var colors;
    colors = {
      reset: "\x1b[0m",
      bright: "\x1b[1m",
      dim: "\x1b[2m",
      underscore: "\x1b[4m",
      blink: "\x1b[5m",
      reverse: "\x1b[7m",
      hidden: "\x1b[8m",
      FgBlack: "\x1b[30m",
      red: "\x1b[31m",
      green: "\x1b[32m",
      yellow: "\x1b[33m",
      blue: "\x1b[34m",
      magenta: "\x1b[35m",
      cyan: "\x1b[36m",
      white: "\x1b[37m"
    };
    return colors[color] + string + colors.reset;
  };

  print = function(tree, size) {
    var res;
    if (size == null) {
      size = 0;
    }
    res = yaml.stringify(tree).replace(/\  type:/g, (function(_this) {
      return function(m) {
        return m.replace(/\ /g, '');
      };
    })(this));
    if (size >= 1) {
      res = res.replace(/\n\s*(?:line|const_type).*/g, '').replace(/left: |right: /g, '--->').replace(/\ --*/g, (function(_this) {
        return function(m) {
          if (m.match(/--/)) {
            return m;
          } else {
            return ' --->>';
          }
        };
      })(this));
    }
    if (size >= 2) {
      res = res.replace(/\n\s*(?:name|value|operator).*/g, '').replace(/type: /g, '');
    }
    res = res.replace(/[0-9][0-9]*/g, (function(_this) {
      return function(m) {
        return color(m, 'blue');
      };
    })(this)).replace(/:=|[+\-*\/%=<>]/g, (function(_this) {
      return function(m) {
        return color(m, 'green');
      };
    })(this)).replace(/false|true/g, (function(_this) {
      return function(m) {
        return color(m, 'magenta');
      };
    })(this)).replace(/\  /g, color('|         ', 'dim')).replace(/(?:name\:|variable\:)\s*".*"/g, (function(_this) {
      return function(m) {
        return m.replace(/".*"/, function(m) {
          return '"' + color(m, 'red').replace(/"/g, '') + '"';
        });
      };
    })(this)).replace(/type:\s*".*"/g, (function(_this) {
      return function(m) {
        return m.replace(/".*"/, function(m) {
          return '"' + color(m, 'cyan').replace(/"/g, '') + '"';
        });
      };
    })(this));
    if (size >= 2) {
      res = res.replace(/".*"/g, (function(_this) {
        return function(m) {
          return '"' + color(m, 'blue').replace(/"/g, '') + '"';
        };
      })(this));
    }
    return console.log(res);
  };

  module.exports = print;

}).call(this);
